"""Generates INT packets."""

import argparse
import logging
from modules.generators import LinearGenerator, ConstantGenerator, Editable_Generator


logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


if __name__ == "__main__":

    parser = argparse.ArgumentParser(description="INT Telemetry Report pkt gen.")
    parser.add_argument(
        "-t",
        "--generator_type",
        default="C",
        type=str,
        choices=("L", "C", "E"),
        help="Choose type of generator: L - linear, C - constant, E - editable",
    )
    parser.add_argument(
        "-hop",
        "--hops",
        default=3,
        type=int,
        choices=range(1, 7),
        help="Number of hops in packet. Max - 6. Default: 3",
    )
    parser.add_argument(
        "-i",
        "--interface",
        type=str,
        default="veth_1",
        help="Interface through which packets will be sent, Default: veth_1",
    )
    parser.add_argument(
        "-s",
        "--send",
        default=1000,
        type=int,
        help="Number of sending packets per second. Only works with `l' option. Default: 1000;",
    )
    parser.add_argument(
        "-g",
        "--gen",
        default=1000,
        type=int,
        help="Number of packages to be generated by the linear generator",
    )
    parser.add_argument(
        "-v",
        "--verbose",
        default=0,
        type=int,
        choices=range(0, 2),
        help="Scapy verbose, 0 - disable, 1 - enable. Default: 0",
    )
    parser.add_argument(
        "-log",
        "--log_level",
        default=20,
        type=int,
        help="CRITICAL = 50\
            ERROR = 40;\
            WARNING = 30;\
            INFO = 20;\
            DEBUG = 10;\
            NOTSET = 0;\
            Default: 20",
    )

    args = parser.parse_args()

    logger.setLevel(args.log_level)

    if args.generator_type == "L":
        logger.info("Start of generating of packages")
        generator = LinearGenerator(
            hops=args.hops,
            log_level=args.log_level,
            packets_gen=args.gen,
            packets_sent=args.send,
        )
        mode = int(
            input("Do you want to use senp or senpfast (1-sendp, 2-sendpfast)?\nMODE: ")
        )
        generator.send_packets(mode, args.interface, args.verbose)

    if args.generator_type == "C":
        logger.info("Start of generating of packages")
        generator = ConstantGenerator(args.hops, args.log_level)
        generator.send_two_packets(args.interface, args.verbose)

    if args.generator_type == "E":
        logger.info("Generate one packet, which one you can edit.")
        generator = Editable_Generator(args.hops, args.log_level)
        logger.info(f"{generator}")
        generator.generate_packet()
